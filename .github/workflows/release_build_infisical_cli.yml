name: Build and release CLI

on:
    workflow_dispatch:

    push:
        # run only against tags
        tags:
            - "infisical-cli/v*.*.*"

permissions:
    contents: write

jobs:
    goreleaser:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: ðŸ”§ Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - run: git fetch --force --tags
            - run: echo "Ref name ${{github.ref_name}}"
            - uses: actions/setup-go@v3
              with:
                  go-version: ">=1.19.3"
                  cache: true
                  cache-dependency-path: cli/go.sum
            - name: Setup for libssl1.0-dev
              run: |
                  echo 'deb http://security.ubuntu.com/ubuntu bionic-security main' | sudo tee -a /etc/apt/sources.list
                  sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32
                  sudo apt update
                  sudo apt-get install -y libssl1.0-dev
            - name: OSXCross for CGO Support
              run: |
                  mkdir ../../osxcross
                  git clone https://github.com/plentico/osxcross-target.git ../../osxcross/target
            - uses: goreleaser/goreleaser-action@v4
              with:
                distribution: goreleaser
                # 'latest', 'nightly', or a semver
                version: 'latest'
                args: release --clean
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - uses: actions/setup-python@v4
            - name: Install dpkg-dev
              run: |
                sudo apt-get update
                sudo apt-get install -y dpkg-dev

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1  # or your preferred region

            - name: Upload to S3
              run: |
                pip install awscli
                sh cli/upload_to_aws.sh
